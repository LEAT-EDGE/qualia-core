[bench]
name = "HD_CNN_float32_train"
seed = 2
first_run = 1
last_run = 1

[learningframework]
kind = 'PyTorch'

[deploy]
target = 'Linux'
converter.kind = 'QualiaCodeGen'
quantize = ['int16']
optimize = ['']
compress = [1]

[dataset]
kind = "HD"
params.path = "data/hd_audio"
params.variant = 'by-subject'
params.test_subjects = [2]

[[preprocessing]]
kind = "Class2BinMatrix"

#[[preprocessing]]
#kind = "Normalize"
#params.method = 'z-score'
#params.method = 'min-max'
#params.axis = 0
#params.debug = true

[[postprocessing]]
kind = "FuseBatchNorm"
export = true

#[[postprocessing]]
#kind = "QuantizationAwareTraining"
#export = true
#params.width = 16
#params.epochs = 0
#params.batch_size = 128
#params.model.params.quantize_linear	= true
#params.force_q = 9

[model_template]
kind = "CNN"
epochs = 50
batch_size = 192
params.prepool 		= 2
params.batch_norm	= true
params.dims		= 1

[model_template.optimizer]
#kind = "SGD"
#params.lr               = 0.05
#params.momentum		= 0.9
#params.weight_decay	= 5e-4
kind = "Adam"
params.lr = 0.01

[model_template.optimizer.scheduler]
kind = "MultiStepLR"
params.milestones	= [15, 30, 45]
params.gamma		= 0.1

# https://pytorch.org/tutorials/intermediate/speech_command_recognition_with_torchaudio.html
# https://arxiv.org/pdf/1610.00087.pdf
[[model]]
name = "hd_cnn_m5"
params.filters 		= [128, 128, 256, 512]
params.kernel_sizes	= [80, 3, 3, 3]
params.paddings		= [40, 1, 1, 1]
params.strides		= [4, 1, 1, 1]
params.pool_sizes	= [4, 4, 4, 4]
params.postpool		= 7
params.fc_units		= []
#disabled = false
disabled = true

[[model]]
name = "hd_cnn_m5_small"
params.filters 		= [16, 16, 32, 64]
params.kernel_sizes	= [80, 3, 3, 3]
params.paddings		= [40, 1, 1, 1]
params.strides		= [4, 1, 1, 1]
params.pool_sizes	= [4, 4, 4, 4]
params.postpool		= 7
params.fc_units		= []
params.batch_norm	= true
#disabled = false
disabled = true

[[model]]
name = "hd_cnn_m5_smaller"
params.filters 		= [16, 16, 32, 64]
params.kernel_sizes	= [40, 3, 3, 3]
params.paddings		= [20, 1, 1, 1]
params.strides		= [8, 1, 1, 1]
params.pool_sizes	= [4, 4, 4, 4]
params.postpool		= 3
params.fc_units		= []
params.batch_norm	= true
disabled = false
#disabled = true

[[model]]
name = "hd_cnn_m3"
params.filters 		= [256, 256]
params.kernel_sizes	= [80, 3,]
params.paddings		= [40, 1,]
params.strides		= [4, 1]
params.pool_sizes	= [4, 4]
params.postpool		= 112
params.fc_units		= []
#disabled = false
disabled = true
