[bench]
name      = 'GSC_ResNetv1-8_LiveMFCCDolphin_int8_train'
seed      = 2
first_run = 1
last_run  = 1

[learningframework]
kind  = 'PyTorch'

[deploy]
target = 'Linux'
converter.kind = 'QualiaCodeGen'
quantize = ['int8']
optimize = ['']
compress = [1]


[dataset]
kind              = 'GSC'
params.variant    = 'v2'
params.path = "/home/jupyter-tlouis/shared/SpeechCommands/speech_commands_v0.02/"
params.subset     = 'no_background_noise'

[[preprocessing]]
kind  = 'Class2BinMatrix'

[[preprocessing]]
kind          = 'Normalize'
params.method = 'z-score'
params.axis   = 0
params.debug  = true

[[data_augmentation]]
kind          = 'GaussianNoise'
params.sigma  = 0.00175

[[data_augmentation]]
kind          = 'TimeWarping'
params.sigma  = 0.0675

[[data_augmentation]]
kind          = 'TimeShifting'
params.alpha  = 1.0

[[data_augmentation]]
kind = "MFCC"
params.evaluate = true
params.sample_rate = 16000
#params.n_mfcc = 64
params.n_mfcc = 40
params.log_mels = true
params.melkwargs.n_fft = 480
params.melkwargs.n_mels = 120
#params.melkwargs.win_length = 1024
params.melkwargs.win_length = 480
#params.melkwargs.hop_length = 128
params.melkwargs.hop_length = 160
params.melkwargs.f_min = 20
params.melkwargs.f_max = 8000

[[postprocessing]]
kind = "QuantizationAwareTraining"
export = true
params.width = 8
params.epochs = 10
params.batch_size = 1536
#params.force_q = 4

[model_template]
kind = "ResNet"
epochs = 0
load = true
train = false
batch_size = 1536
#params.input_shape	= [126, 64]
params.input_shape	= [100, 40]
params.prepool 		= 1
params.postpool   = 'avg'
params.batch_norm 	= false
params.bn_momentum	= 0.1
params.num_blocks	= [2]
params.dims		= 1

#[model_template.optimizer]
#kind = "Adam"
#params.lr               = 0.01
##params.momentum		= 0.9
#params.weight_decay	= 5e-4
#
#[model_template.optimizer.scheduler]
#kind = "MultiStepLR"
#params.milestones	= [12, 27, 40, 50, 55, 57]
#params.gamma		= 0.25

[[model]]
name = 'GSC_ResNet_8_43'
params.filters        = [43, 43, 43]
params.kernel_sizes   = [7, 3, 3]
params.paddings       = [3, 1, 1]
params.strides        = [1, 1]
params.num_blocks     = [2, 2, 2]
disabled = false
#disabled = true



